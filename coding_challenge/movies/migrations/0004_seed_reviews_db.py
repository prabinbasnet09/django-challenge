# Generated by Django 4.2.11 on 2024-06-07 01:58

from django.db import migrations

def populate_reviews(apps, schema_editor):
    Review = apps.get_model("movies", "Review")
    Movie = apps.get_model("movies", "Movie")
    db_alias = schema_editor.connection.alias

    try:
        forrest_gump = Movie.objects.using(db_alias).get(title="Forrest Gump")
        toy_story = Movie.objects.using(db_alias).get(title="Toy Story")
        captain_phillips = Movie.objects.using(db_alias).get(title="Captain Phillips")
        catch_me_if_you_can = Movie.objects.using(db_alias).get(title="Catch Me If You Can")
        bridge_of_spies = Movie.objects.using(db_alias).get(title="Bridge of Spies")
    except Movie.DoesNotExist as e:
        raise Exception("Make sure that the movies have been seeded before running this migration.") from e
    
    reviews = [
        Review(movie=forrest_gump, name="John Doe", rating=5),
        Review(movie=forrest_gump, name="Jenna Ortega", rating=4),
        Review(movie=forrest_gump, name="Tom Hanks", rating=2),
        Review(movie=toy_story, name="Tom Hanks", rating=3),
        Review(movie=toy_story, name="Chris Brown", rating=5),
        Review(movie=toy_story, name="Jennifer Aniston", rating=4),
        Review(movie=captain_phillips, name="Tom Hanks", rating=5),
        Review(movie=captain_phillips, name="Tom Hanks", rating=3),
        Review(movie=captain_phillips, name="Tom Cruise", rating=4),
        Review(movie=catch_me_if_you_can, name="Leonardo DiCaprio", rating=5),
        Review(movie=catch_me_if_you_can, name="Tom Hardy", rating=4),
        Review(movie=catch_me_if_you_can, name="Jamie Vardy", rating=1),
        Review(movie=bridge_of_spies, name="Mark Rylance", rating=5),
        Review(movie=bridge_of_spies, name="Amy Adams", rating=4),
        Review(movie=bridge_of_spies, name="Jennifer Lopez", rating=2),
    ]

    Review.objects.using(db_alias).bulk_create(reviews)


def empty_reviews(apps, schema_editor):
    Review = apps.get_model("movies", "Review")
    db_alias = schema_editor.connection.alias

    Review.objects.using(db_alias).all().filter(movie__title_in=[
        "Forrest Gump",
        "Toy Story",
        "Captain Phillips",
        "Catch Me If You Can",
        "Bridge of Spies",
    ]).delete()

class Migration(migrations.Migration):

    dependencies = [
        ("movies", "0003_review"),
    ]

    operations = [migrations.RunPython(populate_reviews, empty_reviews),]
